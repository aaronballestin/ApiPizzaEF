// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using learnApi.Data;

#nullable disable

namespace learnApi.Data.Migrations
{
    [DbContext(typeof(PizzaContext))]
    [Migration("20240214184923_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("learnApi.Models.DetallePizza", b =>
                {
                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.HasKey("PizzaId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("DetallePizzas");

                    b.HasData(
                        new
                        {
                            PizzaId = 1,
                            IngredientId = 1
                        },
                        new
                        {
                            PizzaId = 1,
                            IngredientId = 2
                        },
                        new
                        {
                            PizzaId = 1,
                            IngredientId = 3
                        },
                        new
                        {
                            PizzaId = 2,
                            IngredientId = 1
                        },
                        new
                        {
                            PizzaId = 2,
                            IngredientId = 2
                        },
                        new
                        {
                            PizzaId = 2,
                            IngredientId = 4
                        },
                        new
                        {
                            PizzaId = 2,
                            IngredientId = 5
                        });
                });

            modelBuilder.Entity("learnApi.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"), 1L, 1);

                    b.Property<decimal>("BonusPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsVeganFree")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            IngredientId = 1,
                            BonusPrice = 0m,
                            IsVeganFree = false,
                            Name = "Tomato Sauce"
                        },
                        new
                        {
                            IngredientId = 2,
                            BonusPrice = 0m,
                            IsVeganFree = false,
                            Name = "Cheese"
                        },
                        new
                        {
                            IngredientId = 3,
                            BonusPrice = 0m,
                            IsVeganFree = false,
                            Name = "Pepperoni"
                        },
                        new
                        {
                            IngredientId = 4,
                            BonusPrice = 0m,
                            IsVeganFree = false,
                            Name = "Mushrooms"
                        },
                        new
                        {
                            IngredientId = 5,
                            BonusPrice = 0m,
                            IsVeganFree = false,
                            Name = "Bell Peppers"
                        });
                });

            modelBuilder.Entity("learnApi.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("learnApi.Models.Pizza", b =>
                {
                    b.Property<int>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PizzaId"), 1L, 1);

                    b.Property<bool>("IsGlutenFree")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PizzaId");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            PizzaId = 1,
                            IsGlutenFree = false,
                            Name = "Classic Italian",
                            Price = 10.99m
                        },
                        new
                        {
                            PizzaId = 2,
                            IsGlutenFree = true,
                            Name = "Veggie",
                            Price = 12.99m
                        });
                });

            modelBuilder.Entity("learnApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("learnApi.Models.DetallePizza", b =>
                {
                    b.HasOne("learnApi.Models.Ingredient", "Ingredient")
                        .WithMany("DetallePizzas")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("learnApi.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("learnApi.Models.Order", b =>
                {
                    b.HasOne("learnApi.Models.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("learnApi.Models.Ingredient", b =>
                {
                    b.Navigation("DetallePizzas");
                });

            modelBuilder.Entity("learnApi.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
